// Account.h#ifndef ACCOUNT_H#define ACCOUNT_H#include <iostream>#include <sstream>#include <string>#include <fstream>#include <utility>#include <vector>using namespace std;class Account {private:    string userName;public:    Account()= default; // Default construct    Account(string name) : userName(std::move(name)) {}; // Overload construct    // Getter for the username    string getUserName() const { return userName; }    // Pure virtual function to get the account balance    virtual double getBalance() const = 0;    // Pure virtual function to deposit an amount into the account    virtual void deposit(double amount) = 0;    // Pure virtual function to withdraw an amount from the account    virtual void withdraw(double amount) = 0;};// Function to let user select the checking account or saving accountint accountChoice();// Account service menu display and operationsvoid accountServiceOperations(Account &account);// Function to check if the username and password in the systembool userAuthentication(string, string);// Add a new user to UserFilevoid addUser(string nm, string psd);#endif